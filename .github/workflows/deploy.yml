name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

permissions:
  contents: write

jobs:
  test:
    if: github.event_name == 'pull_request' && github.event.pull_request.head.ref == 'develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm init -y
          npm install --save-dev eslint prettier
          npm install --save-dev terser clean-css-cli html-minifier-terser

      - name: Create ESLint config
        run: |
          echo '{
            "env": {
              "browser": true,
              "es2021": true
            },
            "extends": "eslint:recommended",
            "parserOptions": {
              "ecmaVersion": "latest",
              "sourceType": "module"
            }
          }' > .eslintrc.json

      - name: Lint
        run: |
          npx eslint js/**/*.js --fix

      - name: Test file optimization
        run: |
          # JavaScriptファイルのテスト最適化
          for file in js/**/*.js; do
            npx terser "$file" --parse --compress --mangle
          done
          
          # CSSファイルのテスト最適化
          for file in css/*.css; do
            npx cleancss "$file"
          done
          
          # HTMLファイルのテスト最適化
          npx html-minifier-terser --collapse-whitespace --remove-comments index.html

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm init -y
          npm install --save-dev terser clean-css-cli html-minifier-terser

      - name: Optimize JavaScript files
        run: |
          for file in js/**/*.js; do
            npx terser "$file" -o "${file%.js}.min.js" -c -m
            mv "${file%.js}.min.js" "$file"
          done

      - name: Optimize CSS files
        run: |
          for file in css/*.css; do
            npx cleancss -o "$file" "$file"
          done

      - name: Optimize HTML files
        run: |
          npx html-minifier-terser --collapse-whitespace --remove-comments --remove-optional-tags --remove-redundant-attributes --remove-script-type-attributes --remove-tag-whitespace --use-short-doctype --minify-css true --minify-js true -o index.html index.html

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          publish_branch: gh-pages
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy to GitHub Pages' 